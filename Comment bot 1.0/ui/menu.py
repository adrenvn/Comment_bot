"""
–ú–µ–Ω—é –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è Instagram Automation Bot v2.0
"""

from telegram import InlineKeyboardButton, InlineKeyboardMarkup

def main_menu(is_admin_user: bool, is_user_user: bool) -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = []
    if is_user_user:
        keyboard.append([InlineKeyboardButton("üìÇ –°—Ü–µ–Ω–∞—Ä–∏–∏", callback_data='scenarios_menu')])
    if is_admin_user:
        keyboard.append([InlineKeyboardButton("üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data='admin_panel')])
    keyboard.append([InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data='help')])
    return InlineKeyboardMarkup(keyboard)

def admin_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = [
        [InlineKeyboardButton("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data='manage_users')],
        [InlineKeyboardButton("üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã", callback_data='manage_admins')],
        [InlineKeyboardButton("üåê –ü—Ä–æ–∫—Å–∏", callback_data='manage_proxies')],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='status_scenarios')],
        [InlineKeyboardButton("üìã –í—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏", callback_data='all_scenarios')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back')]
    ]
    return InlineKeyboardMarkup(keyboard)

def proxy_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [
            InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data='add_proxy'),
            InlineKeyboardButton("üì• –ò–º–ø–æ—Ä—Ç", callback_data='import_menu')
        ],
        [
            InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏", callback_data='list_proxies'),
            InlineKeyboardButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç", callback_data='export_proxies')
        ],
        [
            InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ", callback_data='check_all_proxies'),
            InlineKeyboardButton("‚öôÔ∏è –û–ø–µ—Ä–∞—Ü–∏–∏", callback_data='bulk_operations')
        ],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='proxy_stats')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='admin_panel')]
    ]
    return InlineKeyboardMarkup(keyboard)

def scenarios_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    keyboard = [
        [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π", callback_data='add_scenario')],
        [InlineKeyboardButton("üìã –ú–æ–∏ —Å—Ü–µ–Ω–∞—Ä–∏–∏", callback_data='my_scenarios')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back')]
    ]
    return InlineKeyboardMarkup(keyboard)

def proxy_selection_menu(proxies: list) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–∫—Å–∏ –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è"""
    keyboard = []
    
    for proxy in proxies:
        usage_info = f"({proxy.usage_count} –∏—Å–ø.)"
        status_emoji = "üü¢" if proxy.is_working else "üî¥"
        keyboard.append([
            InlineKeyboardButton(
                f"{status_emoji} {proxy.name} {usage_info}",
                callback_data=f'select_proxy_{proxy.id}'
            )
        ])
    
    keyboard.extend([
        [InlineKeyboardButton("üö´ –ë–µ–∑ –ø—Ä–æ–∫—Å–∏", callback_data='no_proxy')],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data='scenarios_menu')]
    ])
    
    return InlineKeyboardMarkup(keyboard)

def scenario_management_menu(scenario_id: int, scenario_data: dict) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Å—Ü–µ–Ω–∞—Ä–∏–µ–º"""
    keyboard = [
        [InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", callback_data=f'check_comments_{scenario_id}')],
        [InlineKeyboardButton(f"üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è ({scenario_data.get('pending_count', 0)})", callback_data=f'send_messages_{scenario_id}')],
        [InlineKeyboardButton("‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data=f'schedule_check_{scenario_id}')],
    ]
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–µ
    next_check = scenario_data.get('next_check', '–ù–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ')
    keyboard.append([InlineKeyboardButton(f"‚è≥ –°–ª–µ–¥—É—é—â–∞—è: {next_check}", callback_data='noop')])
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–∫—Å–∏
    proxy_info = scenario_data.get('proxy_info', 'üåê –ë–µ–∑ –ø—Ä–æ–∫—Å–∏')
    keyboard.append([InlineKeyboardButton(proxy_info, callback_data='noop')])
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if scenario_data.get('status') == 'running':
        keyboard.append([InlineKeyboardButton("‚è∏ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", callback_data=f'pause_{scenario_id}')])
    else:
        keyboard.append([InlineKeyboardButton("‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å", callback_data=f'resume_{scenario_id}')])
    
    keyboard.extend([
        [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å", callback_data=f'restart_{scenario_id}')],
        [InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f'delete_{scenario_id}')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='my_scenarios')]
    ])
    
    return InlineKeyboardMarkup(keyboard)

def proxy_import_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∏–º–ø–æ—Ä—Ç–∞ –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("üåê 922Proxy", callback_data='import_922proxy')],
        [InlineKeyboardButton("üìù –ò–∑ —Ç–µ–∫—Å—Ç–∞", callback_data='import_from_text')],
        [InlineKeyboardButton("üìÅ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã", callback_data='import_providers')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='manage_proxies')]
    ]
    return InlineKeyboardMarkup(keyboard)

def proxy_providers_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –ø—Ä–æ–∫—Å–∏"""
    from services.proxy_922 import PROXY_PROVIDERS_CONFIG
    
    keyboard = []
    for provider_key, config in PROXY_PROVIDERS_CONFIG.items():
        keyboard.append([
            InlineKeyboardButton(
                f"üåê {config['name']}", 
                callback_data=f'import_provider_{provider_key}'
            )
        ])
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='import_menu')])
    return InlineKeyboardMarkup(keyboard)

def proxy_bulk_operations_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –º–∞—Å—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –ø—Ä–æ–∫—Å–∏", callback_data='check_all_proxies')],
        [InlineKeyboardButton("üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–æ—Ç–∞—Ü–∏—è", callback_data='auto_rotate_proxies')],
        [InlineKeyboardButton("üìä –ü–∞–∫–µ—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞", callback_data='bulk_check_proxies')],
        [InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–∏–µ", callback_data='cleanup_failed_proxies')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='manage_proxies')]
    ]
    return InlineKeyboardMarkup(keyboard)

def proxy_export_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("üìù IP:PORT:USER:PASS", callback_data='export_format_1')],
        [InlineKeyboardButton("üîó USER:PASS@IP:PORT", callback_data='export_format_2')],
        [InlineKeyboardButton("üåê –¢–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–µ", callback_data='export_working_only')],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ TXT", callback_data='export_stats')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='manage_proxies')]
    ]
    return InlineKeyboardMarkup(keyboard)

def proxy_management_menu(proxy_id: int, proxy_data: dict) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã–º –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [
            InlineKeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data=f'check_proxy_{proxy_id}'),
            InlineKeyboardButton("üß™ –¢–µ—Å—Ç —Å Instagram", callback_data=f'test_proxy_instagram_{proxy_id}')
        ],
        [InlineKeyboardButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç—á–∏–∫", callback_data=f'reset_proxy_counter_{proxy_id}')]
    ]
    
    # –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏/–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    if proxy_data.get('is_active'):
        keyboard.append([InlineKeyboardButton("‚è∏Ô∏è –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data=f'deactivate_proxy_{proxy_id}')])
    else:
        keyboard.append([InlineKeyboardButton("‚ñ∂Ô∏è –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data=f'activate_proxy_{proxy_id}')])
    
    keyboard.extend([
        [InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f'delete_proxy_{proxy_id}')],
        [InlineKeyboardButton("üîô –ö —Å–ø–∏—Å–∫—É", callback_data='list_proxies')]
    ])
    
    return InlineKeyboardMarkup(keyboard)

def schedule_check_menu(scenario_id: int) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    keyboard = [
        [InlineKeyboardButton("‚è∞ –ß–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç", callback_data=f'set_timer_15_{scenario_id}')],
        [InlineKeyboardButton("‚è∞ –ß–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç", callback_data=f'set_timer_30_{scenario_id}')],
        [InlineKeyboardButton("‚è∞ –ß–µ—Ä–µ–∑ 1 —á–∞—Å", callback_data=f'set_timer_60_{scenario_id}')],
        [InlineKeyboardButton("‚è∞ –ß–µ—Ä–µ–∑ 2 —á–∞—Å–∞", callback_data=f'set_timer_120_{scenario_id}')],
        [InlineKeyboardButton("‚è∞ –ß–µ—Ä–µ–∑ 6 —á–∞—Å–æ–≤", callback_data=f'set_timer_360_{scenario_id}')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=f'manage_{scenario_id}')]
    ]
    return InlineKeyboardMarkup(keyboard)

def duration_selection_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Å—Ä–æ–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è"""
    keyboard = [
        [InlineKeyboardButton("1 –¥–µ–Ω—å", callback_data='1d')],
        [InlineKeyboardButton("3 –¥–Ω—è", callback_data='3d')],
        [InlineKeyboardButton("7 –¥–Ω–µ–π", callback_data='7d')],
        [InlineKeyboardButton("14 –¥–Ω–µ–π", callback_data='14d')],
        [InlineKeyboardButton("30 –¥–Ω–µ–π", callback_data='30d')]
    ]
    return InlineKeyboardMarkup(keyboard)

def proxy_type_selection_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("HTTP", callback_data='proxy_type_http')],
        [InlineKeyboardButton("HTTPS", callback_data='proxy_type_https')],
        [InlineKeyboardButton("SOCKS5", callback_data='proxy_type_socks5')]
    ]
    return InlineKeyboardMarkup(keyboard)

def confirmation_menu(confirm_action: str, cancel_action: str = 'back') -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    keyboard = [
        [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=confirm_action)],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=cancel_action)]
    ]
    return InlineKeyboardMarkup(keyboard)

def back_menu(action: str = 'back') -> InlineKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥" """
    return InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=action)]])

def pagination_menu(current_page: int, total_pages: int, base_callback: str) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–∞–≥–∏–Ω–∞—Ü–∏–∏"""
    keyboard = []
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if current_page > 1:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f'{base_callback}_page_{current_page-1}'))
    
    nav_buttons.append(InlineKeyboardButton(f"{current_page}/{total_pages}", callback_data='noop'))
    
    if current_page < total_pages:
        nav_buttons.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f'{base_callback}_page_{current_page+1}'))
    
    if nav_buttons:
        keyboard.append(nav_buttons)
    
    return InlineKeyboardMarkup(keyboard)

# === –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø ===

def quick_proxy_actions_menu(proxy_id: int) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [
            InlineKeyboardButton("üîç", callback_data=f'check_proxy_{proxy_id}'),
            InlineKeyboardButton("üß™", callback_data=f'test_proxy_instagram_{proxy_id}'),
            InlineKeyboardButton("‚öôÔ∏è", callback_data=f'manage_proxy_{proxy_id}'),
            InlineKeyboardButton("üóëÔ∏è", callback_data=f'delete_proxy_{proxy_id}')
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def quick_scenario_actions_menu(scenario_id: int) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è"""
    keyboard = [
        [
            InlineKeyboardButton("üîç", callback_data=f'check_comments_{scenario_id}'),
            InlineKeyboardButton("üì©", callback_data=f'send_messages_{scenario_id}'),
            InlineKeyboardButton("‚è∞", callback_data=f'schedule_check_{scenario_id}'),
            InlineKeyboardButton("‚öôÔ∏è", callback_data=f'manage_{scenario_id}')
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

# === –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ú–ï–ù–Æ ===

def proxy_health_status_menu(working_count: int, total_count: int) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Å—Ç–∞—Ç—É—Å–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [InlineKeyboardButton(f"‚úÖ –†–∞–±–æ—Ç–∞—é—Ç: {working_count}", callback_data='filter_working_proxies')],
        [InlineKeyboardButton(f"‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞—é—Ç: {total_count - working_count}", callback_data='filter_failed_proxies')],
        [InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data='check_all_proxies')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='manage_proxies')]
    ]
    return InlineKeyboardMarkup(keyboard)

def scenario_filter_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    keyboard = [
        [InlineKeyboardButton("üü¢ –ê–∫—Ç–∏–≤–Ω—ã–µ", callback_data='filter_scenarios_running')],
        [InlineKeyboardButton("‚è∏Ô∏è –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ", callback_data='filter_scenarios_paused')],
        [InlineKeyboardButton("üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ", callback_data='filter_scenarios_stopped')],
        [InlineKeyboardButton("üåê –° –ø—Ä–æ–∫—Å–∏", callback_data='filter_scenarios_with_proxy')],
        [InlineKeyboardButton("üì± –ë–µ–∑ –ø—Ä–æ–∫—Å–∏", callback_data='filter_scenarios_no_proxy')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='my_scenarios')]
    ]
    return InlineKeyboardMarkup(keyboard)

def admin_tools_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = [
        [InlineKeyboardButton("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data='admin_global_stats')],
        [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", callback_data='admin_restart_all')],
        [InlineKeyboardButton("‚è∏Ô∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", callback_data='admin_stop_all')],
        [InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö", callback_data='admin_cleanup_db')],
        [InlineKeyboardButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö", callback_data='admin_export_all')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='admin_panel')]
    ]
    return InlineKeyboardMarkup(keyboard)

def notification_settings_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    keyboard = [
        [InlineKeyboardButton("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ü–µ–Ω–∞—Ä–∏—è—Ö", callback_data='notif_scenarios')],
        [InlineKeyboardButton("üåê –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–∫—Å–∏", callback_data='notif_proxies')],
        [InlineKeyboardButton("üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã", callback_data='notif_weekly')],
        [InlineKeyboardButton("üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏", callback_data='notif_errors')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='admin_panel')]
    ]
    return InlineKeyboardMarkup(keyboard)

# === –ö–û–ù–¢–ï–ö–°–¢–ù–´–ï –ú–ï–ù–Æ ===

def context_menu_for_failed_proxy(proxy_id: int) -> InlineKeyboardMarkup:
    """–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –Ω–µ—Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data=f'recheck_proxy_{proxy_id}')],
        [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–∫—Å–∏", callback_data=f'manage_proxy_{proxy_id}')],
        [InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data=f'delete_proxy_{proxy_id}')],
        [InlineKeyboardButton("‚è∏Ô∏è –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data=f'deactivate_proxy_{proxy_id}')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='list_proxies')]
    ]
    return InlineKeyboardMarkup(keyboard)

def context_menu_for_failed_scenario(scenario_id: int) -> InlineKeyboardMarkup:
    """–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è"""
    keyboard = [
        [InlineKeyboardButton("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å", callback_data=f'restart_{scenario_id}')],
        [InlineKeyboardButton("üåê –°–º–µ–Ω–∏—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data=f'change_proxy_{scenario_id}')],
        [InlineKeyboardButton("‚öôÔ∏è –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞", callback_data=f'diagnose_{scenario_id}')],
        [InlineKeyboardButton("üìã –õ–æ–≥–∏ –æ—à–∏–±–æ–∫", callback_data=f'error_logs_{scenario_id}')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='my_scenarios')]
    ]
    return InlineKeyboardMarkup(keyboard)

# === –ü–û–ú–û–©–¨ –ò –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===

def help_menu() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–æ–º–æ—â–∏"""
    keyboard = [
        [InlineKeyboardButton("üìñ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data='help_user_guide')],
        [InlineKeyboardButton("üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–∫—Å–∏", callback_data='help_proxy_setup')],
        [InlineKeyboardButton("üéØ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤", callback_data='help_scenarios')],
        [InlineKeyboardButton("üîß –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫", callback_data='help_troubleshooting')],
        [InlineKeyboardButton("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data='help_support')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back')]
    ]
    return InlineKeyboardMarkup(keyboard)

def proxy_provider_help_menu(provider: str) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–æ–º–æ—â–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –ø—Ä–æ–∫—Å–∏"""
    keyboard = [
        [InlineKeyboardButton("üìã –§–æ—Ä–º–∞—Ç—ã –¥–∞–Ω–Ω—ã—Ö", callback_data=f'help_formats_{provider}')],
        [InlineKeyboardButton("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞", callback_data=f'help_setup_{provider}')],
        [InlineKeyboardButton("‚ùì FAQ", callback_data=f'help_faq_{provider}')],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='import_providers')]
    ]
    return InlineKeyboardMarkup(keyboard)

# === –î–ò–ù–ê–ú–ò–ß–ï–°–ö–ò–ï –ú–ï–ù–Æ ===

def create_dynamic_proxy_list_menu(proxies: list, page: int = 1, per_page: int = 5) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –º–µ–Ω—é —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–∫—Å–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    start_idx = (page - 1) * per_page
    end_idx = start_idx + per_page
    page_proxies = proxies[start_idx:end_idx]
    
    keyboard = []
    
    for proxy in page_proxies:
        status_emoji = "üü¢" if proxy.is_working else "üî¥"
        row = [
            InlineKeyboardButton(
                f"{status_emoji} {proxy.name}",
                callback_data=f'proxy_details_{proxy.id}'
            ),
            quick_proxy_actions_menu(proxy.id).inline_keyboard[0][0],  # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
            quick_proxy_actions_menu(proxy.id).inline_keyboard[0][3]   # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
        ]
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    total_pages = (len(proxies) + per_page - 1) // per_page
    if total_pages > 1:
        nav_row = []
        if page > 1:
            nav_row.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f'proxy_list_page_{page-1}'))
        nav_row.append(InlineKeyboardButton(f"{page}/{total_pages}", callback_data='noop'))
        if page < total_pages:
            nav_row.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f'proxy_list_page_{page+1}'))
        keyboard.append(nav_row)
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='manage_proxies')])
    
    return InlineKeyboardMarkup(keyboard)

def create_dynamic_scenario_list_menu(scenarios: list, page: int = 1, per_page: int = 3) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –º–µ–Ω—é —Å–ø–∏—Å–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    start_idx = (page - 1) * per_page
    end_idx = start_idx + per_page
    page_scenarios = scenarios[start_idx:end_idx]
    
    keyboard = []
    
    for scenario in page_scenarios:
        status_emoji = {
            'running': "üü¢",
            'paused': "‚è∏Ô∏è",
            'stopped': "üî¥"
        }.get(scenario.status, "‚ùì")
        
        keyboard.append([
            InlineKeyboardButton(
                f"{status_emoji} –°—Ü–µ–Ω–∞—Ä–∏–π #{scenario.id}",
                callback_data=f'manage_{scenario.id}'
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    total_pages = (len(scenarios) + per_page - 1) // per_page
    if total_pages > 1:
        nav_row = []
        if page > 1:
            nav_row.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f'scenarios_page_{page-1}'))
        nav_row.append(InlineKeyboardButton(f"{page}/{total_pages}", callback_data='noop'))
        if page < total_pages:
            nav_row.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f'scenarios_page_{page+1}'))
        keyboard.append(nav_row)
    
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='scenarios_menu')])
    
    return InlineKeyboardMarkup(keyboard)

# === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ===

def add_back_button(keyboard: list, callback_data: str = 'back') -> InlineKeyboardMarkup:
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥' –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ"""
    keyboard.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=callback_data)])
    return InlineKeyboardMarkup(keyboard)

def add_pagination(keyboard: list, current_page: int, total_pages: int, base_callback: str) -> InlineKeyboardMarkup:
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ"""
    if total_pages > 1:
        nav_buttons = []
        if current_page > 1:
            nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f'{base_callback}_page_{current_page-1}'))
        
        nav_buttons.append(InlineKeyboardButton(f"{current_page}/{total_pages}", callback_data='noop'))
        
        if current_page < total_pages:
            nav_buttons.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f'{base_callback}_page_{current_page+1}'))
        
        keyboard.append(nav_buttons)
    
    return InlineKeyboardMarkup(keyboard)

def create_inline_list(items: list, callback_prefix: str, items_per_row: int = 1) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–∑ —Å–ø–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤"""
    keyboard = []
    
    for i in range(0, len(items), items_per_row):
        row = []
        for j in range(items_per_row):
            if i + j < len(items):
                item = items[i + j]
                row.append(InlineKeyboardButton(
                    str(item['name']),
                    callback_data=f'{callback_prefix}_{item["id"]}'
                ))
        keyboard.append(row)
    
    return InlineKeyboardMarkup(keyboard)

# === –ì–û–¢–û–í–´–ï –®–ê–ë–õ–û–ù–´ ===

COMMON_MENUS = {
    'main': main_menu,
    'admin': admin_menu,
    'proxy': proxy_menu,
    'scenarios': scenarios_menu,
    'help': help_menu,
    'back': back_menu
}

PROXY_MENUS = {
    'import': proxy_import_menu,
    'export': proxy_export_menu,
    'bulk_ops': proxy_bulk_operations_menu,
    'providers': proxy_providers_menu,
    'type_selection': proxy_type_selection_menu
}

SCENARIO_MENUS = {
    'duration': duration_selection_menu,
    'schedule': schedule_check_menu,
    'filter': scenario_filter_menu
}

def get_menu(menu_type: str, **kwargs) -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–Ω—é –ø–æ —Ç–∏–ø—É"""
    if menu_type in COMMON_MENUS:
        return COMMON_MENUS[menu_type](**kwargs)
    elif menu_type in PROXY_MENUS:
        return PROXY_MENUS[menu_type](**kwargs)
    elif menu_type in SCENARIO_MENUS:
        return SCENARIO_MENUS[menu_type](**kwargs)
    else:
        return back_menu()